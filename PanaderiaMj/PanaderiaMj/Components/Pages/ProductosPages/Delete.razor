@page "/DeleteProductos"
@page "/DeleteProductos/{ProductoId:int}"
@inject ProductosServices productosService
@inject InsumosService insumosService
@inject NavigationManager navigationManager
@inject IJSRuntime IJSRuntime
@inject NotificationService NotificationService
@rendermode InteractiveServer
@attribute [Authorize(Roles = "Admin")]


<RadzenNotification />
<PageTitle>Eliminar Producto</PageTitle>
<div class="container">
    <div class="card shadow-header">
        <!-- Header -->
        <div class="card-header">
            <h3><strong>Eliminar Producto</strong></h3>
        </div>
        <div class="card-header">
            <h3 class="text-danger">¿Est&aacute;s seguro de que quieres eliminar el producto?</h3>
        </div>
        <!-- Body -->
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="card shadow-lg">
                        <div class="card-header">
                            <h3 class="text-center"><strong>Datos del Producto</strong></h3>
                        </div>
                        <div class="card-body">
                            <div class="border-primary border-2 borde">
                                <div class="card-body">
                                    <div class="row">
                                        <!-- Columna para los datos del producto -->
                                        <div class="col-12">
                                            <ul class="list-unstyled" style="margin-top: 20px; margin-bottom: 20px;">
                                                <li><strong>ProductoId:</strong> @producto.ProductoId</li>
                                                <li><strong>Nombre:</strong> @producto.Nombre</li>
                                                <li><strong>Descripci&oacute;n:</strong> @producto.Descripcion</li>
                                                <li><strong>Fecha de Creaci&oacute;n:</strong> @producto.FechaCreacion.ToShortDateString()</li>
                                                <li><strong>Precio:</strong> @producto.PrecioProducto</li>
                                                <li><strong>Cantidad a Producir:</strong> @producto.CantidadAProducir</li>
                                                <li><strong>Nota:</strong> @producto.Nota</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card shadow-lg">
                        <div class="card-header">
                            <h3 class="text-center"><strong>Detalle del producto</strong></h3>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Insumo</th>
                                            <th>Cantidad</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var detalle in producto.ProductosDetalle)
                                        {
                                            var insumo = InsumosList.FirstOrDefault(i => i.InsumoId == detalle.InsumoId);
                                            <tr>
                                                <td>@(insumo != null ? insumo.Nombre : "No encontrado")</td>
                                                <td>@detalle.Cantidad</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Footer -->
        <div class="card-footer">
            <button type="button" class="btn btn-outline-danger" @onclick="EliminarProducto"><i class="bi bi-trash-fill"></i> Eliminar</button>
            <button type="button" class="btn btn-outline-primary" @onclick="Volver"><i class="bi bi-box-arrow-left"></i> Volver</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int ProductoId { get; set; }
    public Productos producto { get; set; } = new Productos();
    public List<Insumos> InsumosList { get; set; } = new List<Insumos>();

    protected override async Task OnInitializedAsync()
    {
        if (ProductoId > 0)
        {
            producto = await productosService.GetProductos(ProductoId);
            InsumosList = await insumosService.Listar(t => true);
        }
    }

    public async Task EliminarProducto()
    {
        if (!await productosService.Existe(ProductoId))
        {
            var mensajeError = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "El producto no existe.",
                    Duration = 5000
                };

            NotificationService.Notify(mensajeError);
            return;
        }

        if (await productosService.Eliminar(producto))
        {
            var mensajeExito = new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Éxito",
                    Detail = "El producto se eliminó con éxito.",
                    Duration = 5000
                };

            NotificationService.Notify(mensajeExito);
            Volver();
        }
        else
        {
            var mensajeError = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "No se pudo eliminar el producto.",
                    Duration = 5000
                };

            NotificationService.Notify(mensajeError);
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/IndexProductos");
    }
}
