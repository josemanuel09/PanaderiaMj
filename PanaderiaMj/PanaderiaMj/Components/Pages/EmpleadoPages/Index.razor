@page "/IndexEmpleados"
@inject EmpleadosService empleadoService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject NotificationService NotificationService
@rendermode InteractiveServer

<div class="card" style="max-width: 1400px; margin: 40px auto;">
    <div class="card-header" style="background-color: #5D5C61;">
        <div class="row align-items-center justify-content-center">
            <div class="col-3">
                <img src="/Images/empleado.png" alt="empleado" style="max-width: 50%; height: auto;">
            </div>
            <div class="col-9">
                <h1 style="text-align: center; color: #FFFFFF;"><strong>Consulta de Empleados</strong></h1>
            </div>
        </div>
    </div>

    <div class="card-body">
        <div class="row mt-3">
            <div class="col-3">
                <label>Filtrar Por</label>
                <select class="form-select">
                    <option value="0" selected disabled>Seleccione</option>
                    <option value="1">EmpleadoId</option>
                    <option value="2">Nombre</option>
                </select>
            </div>
            <div class="col-3">
                <label>ID/Nombre</label>
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Ingrese ID o Nombre">
                </div>
            </div>
            <div class="col-5">
                <button type="button" @onclick="Buscar" class="btn btn-primary">
                    <i class="bi bi-search"></i> Buscar
                </button>
            </div>
        </div>

        <table class="table mt-3">
            <thead>
                <tr>
                    <th scope="col" style="width: 160px;">Empleado Id</th>
                    <th scope="col" style="width: 160px;">Nombre</th>
                    <th scope="col" style="width: 160px;">Tel&eacute;fono</th>
                    <th scope="col" style="width: 160px;">Direcci&oacute;n</th>
                    <th scope="col" style="width: 160px;">Ver</th>
                    <th scope="col" style="width: 160px;">Editar</th>
                    <th scope="col" style="width: 160px;">Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var empleado in ListaEmpleados)
                {
                    <tr>
                        <td>@empleado.EmpleadoId</td>
                        <td>@empleado.Nombre</td>
                        <td>@empleado.Telefono</td>
                        <td>@empleado.Direccion</td>
                        <td>
                            <div style="text-align:center">
                                <a href="/ViewEmpleados/@empleado.EmpleadoId" class="btn btn-outline-primary bi bi-eye"></a>
                            </div>
                        </td>
                        <td>
                            <div style="text-align:center">
                                <a href="/EditEmpleados/@empleado.EmpleadoId" class="btn btn-outline-warning bi bi-pencil"></a>
                            </div>
                        </td>
                        <td>
                            <div style="text-align:center">
                                <a href="/DeleteEmpleados/@empleado.EmpleadoId" class="btn btn-outline-danger bi bi-trash"></a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    public List<Empleados> ListaEmpleados { get; set; } = new List<Empleados>();
    public int Opcion { get; set; } = 0;
    public int EmpleadosId { get; set; }
    public string Nombre { get; set; }
   
    protected override async Task OnInitializedAsync()
    {
        await CargarClientes();
    }

    public async Task CargarClientes()
    {
        ListaEmpleados = await empleadoService.Listar(t => true);
        
    }

    public async Task Buscar()
    {

        switch (Opcion)
        {
           
            case 1:
                ListaEmpleados = await empleadoService.Listar(t => t.EmpleadoId == EmpleadosId );
                break;
            case 2:
                ListaEmpleados = await empleadoService.Listar(t => t.Nombre.ToLower().Contains(Nombre.ToLower()));
                break;
            default:
                break;
        }
    }
}
