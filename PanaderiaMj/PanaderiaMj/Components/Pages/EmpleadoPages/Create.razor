@page "/CreateEmpleados"
@inject NavigationManager NavigationManager
@inject EmpleadosService empleadosService
@inject NotificationService NotificationService
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<RadzenNotification />
<EditForm Model="empleado" OnValidSubmit="Guardar" FormName="EditForm">
    <DataAnnotationsValidator />

    <div class="card" style="max-width: 1000px; left: 50%; transform: translate(-50%);">
        <!-- Encabezado de la Página -->
        <div class="card-header" style="background-color: #5D5C61">
            <div class="row" style="flex-direction: row; align-items: center;">
                <div class="col-3">
                    <div style="width: 100%; display: flex; justify-content: center;">
                        <img src="https://cdn-icons-png.flaticon.com/512/1019/1019607.png" alt="pan" style="max-width: 100%; height: auto;">
                    </div>
                </div>
                <div class="col-9">
                    <h1 style="text-align: center; color: #FFFFFF;"><strong>Crear Empleado</strong></h1>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="Nombre">Nombre:</label>
                        <input type="text" class="form-control" id="Nombre" @bind="empleado.Nombre" />
                        <ValidationMessage For="@(() => empleado.Nombre)" />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="Direccion">Direcci&oacute;n:</label>
                        <input type="text" class="form-control" id="Direccion" @bind="empleado.Direccion" />
                        <ValidationMessage For="@(() => empleado.Direccion)" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="Telefono">Tel&eacute;fono:</label>
                        <input type="text" class="form-control" id="Telefono" @bind="empleado.Telefono" />
                        <ValidationMessage For="@(() => empleado.Telefono)" />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="Fecha">Fecha de Ingreso:</label>
                        <input type="date" class="form-control" id="Fecha" @bind-value="empleado.FechaIngreso" />
                        <ValidationMessage For="@(() => empleado.FechaIngreso)" />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="Cedula">C&eacute;dula:</label>
                        <input type="text" class="form-control" id="Cedula" @bind="empleado.Cedula" />
                        <ValidationMessage For="@(() => empleado.Cedula)" />
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer text-center fs-5" style="background-color: #5D5C61">
            <button name="btNuevo" id="btNuevo" class="btn btn-primary mr-2" @onclick="Nuevo" type="button">
                <span class="bi bi-plus-circle"></span> Nuevo
            </button>
            <button name="btnGuardar" id="btnGuardar" class="btn btn-success mr-2" type="button" @onclick="Guardar">
                <span class="bi bi-download"></span> Guardar
            </button>
            <button name="btnEliminar" id="btnEliminar" class="btn btn-secondary" type="button" @onclick="Atras">
                <span class="bi bi-arrow-left-square-fill"></span> Volver Atrás
            </button>
        </div>
    </div>
</EditForm>

@code {
    public Empleados empleado { get; set; } = new Empleados();

    protected override void OnInitialized()
    {
        empleado.FechaIngreso = DateTime.Now;
    }

    public async Task Guardar()
    {
        // Aquí puedes agregar la validación adicional si es necesario
        await empleadosService.Guardar(empleado);

        var mensajeExito = new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Éxito",
                Detail = "Empleado guardado exitosamente.",
                Duration = 5000
            };
        NotificationService.Notify(mensajeExito);

        Nuevo();
    }

    public void Nuevo()
    {
        empleado = new Empleados();
    }

    void Atras()
    {
        NavigationManager.NavigateTo("IndexEmpleados");
    }
}
