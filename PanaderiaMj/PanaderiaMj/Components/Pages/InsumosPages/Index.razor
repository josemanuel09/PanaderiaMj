@page "/IndexInsumo"
@inject InsumosService insumosService

<div class="card" style="max-width: 1400px; margin: 40px auto;">
    <div class="card-header" style="background-color: #5D5C61;">
        <div class="row align-items-center justify-content-center">
            <div class="col-3">
                <img src="/Images/conultarInsumos.png" alt="insumos" style="max-width: 50%; height: auto;">
            </div>
            <div class="col-9">
                <h1 style="text-align: center; color: #FFFFFF;"><strong>Consulta de Insumos</strong></h1>
            </div>
        </div>
    </div>

    <div class="card-body">
        <!-- Filtro de búsqueda de insumos -->
        <div class="row mt-3">
            <div class="col-3">
                <label>Filtrar Por</label>
                <select @bind="Opcion" class="form-select">
                    <option value="0">Todo</option>
                    <option value="1">InsumoId</option>
                    <option value="2">Nombre</option>
                </select>
            </div>
            @if (Opcion == 1)
            {
                <div class="col-3">
                    <label>ID</label>
                    <div class="input-group">
                        <input type="number" @bind="InsumoId" class="form-control" />
                    </div>
                </div>
            }
            else if (Opcion == 2)
            {
                <div class="col-3">
                    <label>Nombre</label>
                    <div class="input-group">
                        <input type="text" @bind="Nombre" class="form-control" />
                    </div>
                </div>
            }
            <div class="col-3">
                <button type="button" @onclick="Buscar" class="btn btn-primary mt-4">
                    <i class="bi bi-search"></i> Buscar
                </button>
            </div>
        </div>

        <!-- Tabla de resultados -->
        <table class="table table-striped table-bordered mt-4">
            <thead>
                <tr>
                    <th scope="col" style="width: 90px;">Insumo Id</th>
                    <th scope="col" style="width: 160px;">Nombre</th>
                    <th scope="col" style="width: 160px;">Cantidad Disponible</th>
                    <th scope="col" style="width: 100px;">Editar</th>
                    <th scope="col" style="width: 160px;">Ver </th>
                    <th scope="col" style="width: 100px;">Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var insumo in ListaInsumos)
                {
                    <tr>
                        <td>@insumo.InsumoId</td>
                        <td>@insumo.Nombre</td>
                        <td>@insumo.CantidadDisponible</td>
                        <td>
                            <div style="text-align: center;">
                                <a href="/EditInsumo/@insumo.InsumoId" class="btn btn-outline-warning bi bi-pencil"></a>
                            </div>
                        </td>
                        <td>
                            <div style="text-align: center;">
                                <a href="/ViewInsumo/@insumo.InsumoId" class="btn btn-outline-info bi bi-eye"></a>
                            </div>
                        </td>
                        <td>
                            <div style="text-align: center;">
                                <a href="/DeleteInsumo/@insumo.InsumoId" class="btn btn-outline-danger bi bi-trash-fill"></a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    public List<Insumos> ListaInsumos { get; set; } = new List<Insumos>();
    public int Opcion { get; set; } = 0;
    public int InsumoId { get; set; }
    public string Nombre { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CargarInsumos();
    }

    public async Task CargarInsumos()
    {
        ListaInsumos = await insumosService.Listar(t => true);
    }

    public async Task Buscar()
    {
        switch (Opcion)
        {
            case 0:
                ListaInsumos = await insumosService.Listar(t => true);
                break;
            case 1:
                ListaInsumos = await insumosService.Listar(t => t.InsumoId == InsumoId);
                break;
            case 2:
                ListaInsumos = await insumosService.Listar(t => t.Nombre.ToLower().Contains(Nombre.ToLower()));
                break;
            default:
                break;
        }
    }
}
